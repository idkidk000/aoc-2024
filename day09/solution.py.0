#!/usr/bin/env python3


class File():

  def __init__(self, ix: int, start: int, size: int):
    self.ix = ix
    self.start = start
    self.size = size

  @property
  def is_file(self):
    return self.ix != -1

  def __repr__(self):
    return f'''<{'File' if self.is_file else 'FreeSpace'} ix={self.ix} start={self.start} size={self.size}>'''


class DiskMap():
  files: list[File] = []
  size = 0

  def __init__(self, line: str):
    position = 0
    for ix, size in enumerate(list(map(int, line))):
      self.files.append(File((ix // 2) if ix % 2 == 0 else -1, position, size))
      position += size
    self.size = position

  def __repr__(self):
    return f'<DiskMap {self.files}>'


with open('example.txt', 'r') as f:
  disk_maps = [DiskMap(x) for x in f.read().splitlines()]

print(f'{disk_maps=}')
